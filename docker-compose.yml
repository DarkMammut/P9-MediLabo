services:

  config-server:
    container_name: config-server
    build:
      context: ./config-server
      dockerfile: Dockerfile
    ports:
      - "8888:8888"
    networks:
      - medilabo-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://config-server:8888/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 5

  eureka-server:
    container_name: eureka-server
    build:
      context: ./eureka-server
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    networks:
      - medilabo-network
    environment:
      DOCKER_ENV: "true"
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
      SPRING_CLOUD_CONFIG_URI: http://config-server:8888
    healthcheck:
      test: ["CMD", "curl", "-f", "http://eureka-server:8761/eureka/apps"]
      interval: 30s
      timeout: 10s
      retries: 5
    depends_on:
      config-server:
        condition: service_healthy

  api-gateway:
    container_name: api-gateway
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    networks:
      - medilabo-network
    environment:
      DOCKER_ENV: "true"
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
      SPRING_CLOUD_CONFIG_URI: http://config-server:8888
    depends_on:
      config-server:
        condition: service_healthy
      eureka-server:
        condition: service_healthy

  patient-service:
    build:
      context: ./patient-service
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    networks:
      - medilabo-network
    environment:
      DOCKER_ENV: "true"
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
      SPRING_CLOUD_CONFIG_URI: http://config-server:8888
      SPRING_DATASOURCE_URL: jdbc:mysql://patient-db:3306/patientdb
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: password
    depends_on:
      config-server:
        condition: service_healthy
      patient-db:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      api-gateway:
        condition: service_started

  notes-service:
    build:
      context: ./notes-service
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    networks:
      - medilabo-network
    environment:
      DOCKER_ENV: "true"
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
      SPRING_CLOUD_CONFIG_URI: http://config-server:8888
    depends_on:
      config-server:
        condition: service_healthy
      notes-db:
        condition: service_healthy
      eureka-server:
        condition: service_started
      api-gateway:
        condition: service_started

  risk-service:
    build:
      context: ./risk-service
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    networks:
      - medilabo-network
    environment:
      DOCKER_ENV: "true"
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
      SPRING_CLOUD_CONFIG_URI: http://config-server:8888
    depends_on:
      config-server:
        condition: service_healthy
      eureka-server:
        condition: service_started
      api-gateway:
        condition: service_started

  patient-db:
    image: mysql:8
    container_name: patient-db
    restart: always
    ports:
      - "3307:3306"
    volumes:
      - ./patientdb_data:/var/lib/mysql
    networks:
      - medilabo-network
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: patientdb
      MYSQL_PASSWORD: password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "--password=password"]
      interval: 10s
      timeout: 5s
      retries: 3

  notes-db:
    image: mongo:5
    container_name: notes-db
    restart: always
    ports:
      - "27018:27017"
    volumes:
      - ./notesdb_data:/data/db
    networks:
      - medilabo-network
    environment:
      MONGO_INITDB_DATABASE: notesdb
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 3

networks:
  medilabo-network:
    driver: bridge